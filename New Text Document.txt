<?php

namespace frontend\controllers;

use frontend\models\ActionLogs;
use backend\models\Departments;
use frontend\components\helpers\NodeHelper;
use Yii;
use frontend\models\Hospital;
use frontend\models\HospitalSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\helpers\ArrayHelper;
use PhpOffice\PhpSpreadsheet\Style\Alignment;
/**
 * HospitalController implements the CRUD actions for Hospital model.
 */
class HospitalController extends Controller
{

//    public function beforeAction($action)
//    {
//        $listCheckedAction = ['create', 'create-hospital', 'update','update-hospital', 'delete','delete-hospital'];
//        if (in_array($action->id, $listCheckedAction)) {
//            if (!NodeHelper::getPrimaryNode()) {
//                throw new NotFoundHttpException('Bạn không có quyền truy cập trang này.');
//            }
//        }
//
//        return parent::beforeAction($action); // TODO: Change the autogenerated stub
//    }

    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists all Hospital models.
     * @return mixed
     */
    public function actionIndex()
    {
        if (Yii::$app->user->canSite('hospital_index', Yii::$app->params["siteId"])) {
            $searchModel = new HospitalSearch();
            $dataProvider = $searchModel->search(Yii::$app->request->queryParams);
           
            // foreach($dataProvider->getModels() as $value){
            //     echo "</pre>";
            //     print_r($value);
            //     die();
            // }
            // $dataProvider->getModels()->array();
            // echo "</pre>";
            // print_r($dataProvider);
            // die();
            $styleCell = [
                'alignment' => [
                    'horizontal' => Alignment::HORIZONTAL_CENTER,
                    'vertical' => Alignment::VERTICAL_CENTER
                ],
                /*'borders' => [
                    'outline' => [
                        'borderStyle' => Border::BORDER_THIN,
                        'color' => ['argb' => '000000'],
                    ]
                ]*/
            ];
    
            $styleCellHeader = $styleCell;
            $styleCellHeader['font'] = [
                'bold' => true
            ];
    
            $dataArray = [];
    
            $columnName = [
                'Hospital ID', 'Mã BV', 'Tên BV','Số điện thoại','Điện thoại nội bộ','Phòng/Ban','Id Api','Loại điều trị','Tầng điều trị','Tổng số giường','Tổng số giường trống'
                ,'Địa chỉ','Phường/Xã','Quận/Huyện','Ghi Chú','Vĩ độ','Kinh Độ','Loại cơ sở','Tình trạng','Thời gian tạo','Thời gian cập nhật','Tạo bởi','Cập nhật bởi'
            ];
    
            $columnCode = [
                'id','hospital_code', 'hospital_name', 'hospital_phone','phone_local','depart_id','id_api','loai_dieu_tri', 'tang_dieu_tri', 'tong_so_giuong','tong_giuong_trong','address',
                'ward','district', 'note', 'lat','lng','type','status','created_at', 'updated_at', 'created_by','updated_by'
                // Call Inbound
                
            ];
    
            if (isset($columnCode) && isset($columnName))
            {
                for ($i = 0; $i < count($columnCode); $i++)
                {
                    $dataArray[$i] = [
                        'label' => $columnName[$i],
                        'attribute' => $columnCode[$i],
                        //'contentOptions' => $styleCell,
                        'headerOptions' => ['font' => ['bold' => true]]
                    ];
                }
            }
    
            $exportHeader = [
                ['header' => '(Agent)','offset' => 0,'length' => 10,'contentOptions' => $styleCell,'headerOptions' => $styleCellHeader],
                ['header' => '(IB)','offset' => 0,'length' => 1,'contentOptions' => $styleCell,'headerOptions' => $styleCellHeader],
                ['header' => '(IB) Cuộc gọi thành công','offset' => 0,'length' => 9,'contentOptions' => $styleCell,'headerOptions' => $styleCellHeader],
                ['header' => '(IB) Cuộc gọi không thành công','offset' => 0,'length' => 5,'contentOptions' => $styleCell,'headerOptions' => $styleCellHeader],
            ];
    
            $userId = Yii::$app->user->getId();
            $filePath = Yii::$app->basePath . '/web/export_report/bao_cao_nang_xuat_cua_agent_.xlsx';
            if (file_exists($filePath)) {
                unlink($filePath);
            }
    
            $exporter = new \frontend\models\Spreadsheet([
                'dataProvider' => $dataProvider,
                'columns' => $dataArray,
                'showHeader' => true,
                'showFooter' => true
            ]);
            $exporter->save($filePath);
            // $path = Yii::$app->basePath . '/web/export_report/bao_cao_nang_xuat_cua_agent_.xlsx';
    
            // if (file_exists($path)) {
            //     return Yii::$app->response->sendFile($path);
            // }
            $path = Yii::getAlias('@webroot').'/export_report/bao_cao_nang_xuat_cua_agent_.xlsx';

            if (file_exists($path)) {
                return Yii::$app->response->sendFile($path, 'bao_cao_nang_xuat_cua_agent_.xlsx');
            }
            \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
                
            
            return [
                'success' => true,
                'message' => 'Xuất báo cáo thành công',
                'userId' => $userId
            ];
            // return $this->render('index', [
            //     'searchModel' => $searchModel,
            //     'dataProvider' => $dataProvider,
            // ]);
            // $csv = array();
            // $lines = file(Yii::$app->basePath . '/web/export_report/bao_cao_nang_xuat_cua_agent_.xlsx', FILE_IGNORE_NEW_LINES);
            // // $array = \PhpOffice\PhpSpreadsheet\IOFactory::load('file.xls');
            // foreach ($lines as $key => $value)
            // {
            //     $csv[$key] = str_getcsv($value);
            // }

            // $array = \PhpOffice\PhpSpreadsheet\IOFactory::load(Yii::$app->basePath . '/web/export_report/bao_cao_nang_xuat_cua_agent_.xlsx');
            // echo '<pre>';
            // print_r($array);
            // echo '</pre>';
            // die();
            // echo"</>";
            // print_r($data_array);
            // echo"</pre>";


            // $spreadsheet = \PhpOffice\PhpSpreadsheet\IOFactory::load( Yii::$app->basePath . '/web/export_report/bao_cao_nang_xuat_cua_agent_.xlsx');
            // $worksheet = $spreadsheet->getActiveSheet();
            // $rows = [];
            // foreach ($worksheet->getRowIterator() AS $row) {
            //     $cellIterator = $row->getCellIterator();
            //     $cellIterator->setIterateOnlyExistingCells(FALSE); // This loops through all cells,
            //     $cells = [];
            //     foreach ($cellIterator as $cell) {
            //         $cells[] = $cell->getValue();
            //         // print_r($cells[]);
            //         // die();
            //     }
            //     $rows[] = $cells;
            // }    
            $spreadsheet = \PhpOffice\PhpSpreadsheet\IOFactory::load( Yii::$app->basePath . '/web/export_report/bao_cao_nang_xuat_cua_agent_.xlsx');
            $worksheet = $spreadsheet->getActiveSheet();
            $rows = $worksheet->toArray();
            $itemLists =  [];
            $key = [0 => 'name', 1 => 'phone', 2 => 'id', 3 => 'pro'];
            foreach($rows as $item){
                $itemLists[] = array_combine($key, $item);
            } 

            echo '<pre>';
            print_r($itemLists);
            echo '</pre>';
            die();
        }else {
        throw new NotFoundHttpException('Bạn không có quyền truy cập trang này.');
    }
    }

    /**
     * Displays a single Hospital model.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionView($id)
    {
            return $this->render('view', [
                'model' => $this->findModel($id),
            ]);

    }


    public function getDepartRules(){
        //---------------------------------------------
        $departments = array();
        if (Yii::$app->user->canSite('Sysadmin',Yii::$app->params["siteId"])) {
            // nếu có quyền Sysadmin thì sẽ lấy tất cả các đơn vị/phòng ban
            $list = (new \yii\db\Query())->select('id')->from('departments_v2')->all();
            foreach ($list as $item){
                array_push($departments, $item['id']);
            }
        } else
        if (Yii::$app->user->canSite('hospitalManager',Yii::$app->params["siteId"])){
            $departmentIds = Yii::$app->user->getDepartments('hospitalManager',Yii::$app->params["siteId"]);
        } else {// trường hợp chỉ có quyền hospital nhỏ(ví dụ hospitalIndex) và các quyền khác thì lấy theo phạm vi của đơn vị đó
            $departmentIds = Yii::$app->user->identity->department_id;
        }
//        $departments = explode(',', $departmentIds);
        if(Yii::$app->user->canSite('Sysadmin',Yii::$app->params["siteId"])){
            $departments = $departments;
        } else {
        $departments = explode(',', $departmentIds);
        }
//                $arrayDepartment = $departments;

        //----------------------------------------------
        return $departments;
    }

    /**
     * Creates a new Hospital model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        if (Yii::$app->user->canSite('hospital_create', Yii::$app->params["siteId"])) {
            $model = new Hospital();
            if ($model->load(Yii::$app->request->post()) && $model->save()) {
                ActionLogs::log('benh_vien', 'create_benh_vien', $model->id, null, $model->toArray(), "thêm bệnh viện thành công: " . $model->id);
                return $this->redirect(['view', 'id' => $model->id]);
            }
            $departments = $this->getDepartRules();
            $depart = ArrayHelper::map(Departments::find()->andFilterWhere(['IN', 'id', $departments])->all(), 'id', 'department_name');
            return $this->render('create', [
                'model' => $model,
                'depart' => $depart
            ]);
        }else {
        throw new NotFoundHttpException('Bạn không có quyền truy cập trang này.');
    }
    }

    /**
     * Updates an existing Hospital model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionUpdate($id){
        if (Yii::$app->user->canSite('hospital_update', Yii::$app->params["siteId"])) {
            $model = $this->findModel($id);
            if ($model->load(Yii::$app->request->post()) && $model->save()) {
            ActionLogs::log('benh_vien', 'update_benh_vien', $model->id, null, $model->toArray(), "sửa bệnh viện thành công: " . $model->id);
            return $this->redirect(['view', 'id' => $model->id]);
        }
            $departments = $this->getDepartRules();
            $depart = ArrayHelper::map(Departments::find()->andFilterWhere(['IN', 'id', $departments])->all(), 'id', 'department_name');
//            $depart = ArrayHelper::map(Departments::find()->all(), 'id', 'department_name');
        return $this->render('update', [
            'model' => $model,
            'depart' => $depart
        ]);
    }else {
        throw new NotFoundHttpException('Bạn không có quyền truy cập trang này.');
    }
    }

    /**
     * Deletes an existing Hospital model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionDelete($id)
    {
        if (Yii::$app->user->canSite('hospital_delete', Yii::$app->params["siteId"])) {
            $model = $this->findModel($id);
            if ($model->delete()) {
                ActionLogs::log('benh_vien', 'delete_benh_vien', $model->id, $model->toArray(), null, "Xóa bệnh viện: " . $model->id);
            }
//            $this->findModel($id)->delete();

            return $this->redirect(['index']);
        }else {
            throw new NotFoundHttpException('Bạn không có quyền truy cập trang này.');
        }
    }

    /**
     * Finds the Hospital model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Hospital the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Hospital::findOne($id)) !== null) {
            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');

    }
}
